from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery

from bot.db import Role
from bot.filters import RoleCheckFilter
from bot.utils import BasicAction, BasicCallback

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
router = Router(name="Reset state")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
router.message.filter(RoleCheckFilter(Role.USER))


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
@router.callback_query(BasicCallback.filter(F.action == BasicAction.RESET))
async def callback_reset_state(c: CallbackQuery, state: FSMContext) -> bool:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    """
    current_state = await state.get_state()
    if current_state is None:
        return await c.answer("ü´ó –í–∞–º –Ω–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å")

    await state.clear()
    await c.answer("‚ùå –û—Ç–º–µ–Ω–∞")


# –ü—Å–µ–≤–¥–æ–Ω–∏–º
router_reset_state = router
